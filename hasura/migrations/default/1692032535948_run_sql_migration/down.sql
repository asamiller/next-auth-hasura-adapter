-- Could not auto-generate a down migration.
-- Please write an appropriate down migration for the SQL below:
-- CREATE EXTENSION IF NOT EXISTS pgcrypto;
--
-- SET check_function_bodies = false;
--
-- CREATE TABLE public.auth_accounts (
--     id uuid DEFAULT public.gen_random_uuid() NOT NULL,
--     type text NOT NULL,
--     provider text NOT NULL,
--     "providerAccountId" text NOT NULL,
--     refresh_token text,
--     access_token text,
--     expires_at bigint,
--     token_type text,
--     scope text,
--     id_token text,
--     session_state text,
--     oauth_token_secret text,
--     oauth_token text,
--     "userId" uuid NOT NULL,
--     refresh_token_expires_in bigint
-- );
--
-- CREATE TABLE public.auth_sessions (
--     id uuid DEFAULT public.gen_random_uuid() NOT NULL,
--     "sessionToken" text NOT NULL,
--     "userId" uuid NOT NULL,
--     expires timestamptz
-- );
--
-- CREATE TABLE public.auth_users (
--     id uuid DEFAULT public.gen_random_uuid() NOT NULL,
--     name text,
--     email text,
--     "emailVerified" timestamptz,
--     image text
-- );
--
-- CREATE TABLE public.auth_verification_tokens (
--     token text NOT NULL,
--     identifier text NOT NULL,
--     expires timestamptz
-- );
--
-- ALTER TABLE ONLY public.auth_accounts
--     ADD CONSTRAINT auth_accounts_pkey PRIMARY KEY (id);
--
-- ALTER TABLE ONLY public.auth_sessions
--     ADD CONSTRAINT auth_sessions_pkey PRIMARY KEY (id);
--
-- ALTER TABLE ONLY public.auth_users
--     ADD CONSTRAINT auth_users_email_key UNIQUE (email);
--
-- ALTER TABLE ONLY public.auth_users
--     ADD CONSTRAINT auth_users_pkey PRIMARY KEY (id);
--
-- ALTER TABLE ONLY public.auth_verification_tokens
--     ADD CONSTRAINT auth_verification_tokens_pkey PRIMARY KEY (token);
--
-- ALTER TABLE ONLY public.auth_accounts
--     ADD CONSTRAINT "auth_accounts_userId_fkey" FOREIGN KEY ("userId") REFERENCES public.auth_users(id) ON UPDATE RESTRICT ON DELETE CASCADE;
--
-- ALTER TABLE ONLY public.auth_sessions
--     ADD CONSTRAINT "auth_sessions_userId_fkey" FOREIGN KEY ("userId") REFERENCES public.auth_users(id) ON UPDATE RESTRICT ON DELETE CASCADE;
